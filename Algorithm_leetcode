# 58. Length of Last Word 
# Accepted Runtime 28 ms

class Solution :
    def lengthOfLastWord(self, s:str) -> int :
        s_split = s.split()
        if len(s_split)==0 :
            return 0
        else :
            return len(s_split[-1])

        
# 66. Plus One 
# Accepted Runtime 32 ms -> [1,2,3,9,9] 구현 ??

class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        n = digits[-1]
        n2 = digits[-2]
        del digits[-1]
        digits.append(n+1)
        if digits[-1] == 10 :
            digits[-1] = 0
            digits[-2] = n2+1
        return digits
        
# ?        
class Solution:
    def plusOne(self, digits: List[int]) -> List[int]:
        n = len(digits)
        i = n-1
        while i >= 0 :
            if digits[i] != 9 :
                digits[i] = digits[i] + 1
                carry = 0 
                break
            else :
                digits[i] = 0 
                carry = 1
            if i==0 and carry ==1 :
                digits.insert(0,1)
            i -= 1
        return digits
        
 
# 67. Add Binary
# Accepted Runtime 32 ms
# int(a,2) : 2진법 -> 10진법
# return bin(int(a,2)+int(b,2)) : 10진법 -> 2진법

class Solution:
    def addBinary(self, a: str, b: str) -> str:
        return bin(int(a,2) + int(b,2))[2::]  


# 69. Sqrt(x)   
# Accepted Runtime 16 ms

class Solution:
    def mySqrt(self, x: int) -> int:
        x_sqrt = math.sqrt(x)
        if x_sqrt == int :
            return(x_sqrt)
        else :
            return(math.trunc(x_sqrt))


# 70. Climbing Stairs  
# 









